---
- hosts: "{{ target }}"
  tags: all
  become: yes
  gather_facts: true
  ignore_errors: yes
  vars_files:
    - config.yml
    - vault.yml
  vars:
    - ansible_become_pass: '{{ su_password }}'
  pre_tasks:
  - name: verify git installation
    package: name=git state=present
  - name: Verify OpenSsh installation
    package: name=openssh-server state=present
  - name: Print distribution version
    debug: msg="{{ ansible_distribution_major_version }}"

- name: Setting up Raspberry Pi / Pi
  tags: [all, pi]
  hosts: pi
  become: yes
  collections:
    - rafaelktistakis.pi
    - rafaelktistakis.linux
    - devsec.hardening
  roles:
    - packages
    - { role: packages, packages_install: "{{ packages_pi_os_bullseye }}" }
    - pisetup
    - general_setup
    - overclock
    - plex
    - starship
    - tmux
    - homebridge
    - { role: qbittorrent, service_started: false, set_settings: false }
    - usbc-gadget
    - docker
    - code_tunnel
    - wifipowermanagement
    # - os_hardening
    # - ssh_hardening
  vars_files:
    - config.yml
    - vault.yml
  vars:
    - ansible_become_pass: '{{ su_password }}'
  pre_tasks:
    - name: verify git installation
      package: name=git state=present

- name: Setting up Raspberry Pi 5
  tags: [all, ganondorf]
  hosts: ganondorf
  become: yes
  collections:
    - rafaelktistakis.pi
    - rafaelktistakis.linux
    - devsec.hardening
  roles:
    - { role: packages }
    - { role: packages, packages_install: "{{ packages_pi_os_bookworm }}" }
    - pisetup
    - general_setup
    - starship
    - tmux
    - docker
    - { role: twingate_connector, connector: twingate-spry-unicorn, network: rafaelktistakis, access_token: "{{ twingate_rafaelktistakis_spry_unicorn_access_token }}", refresh_token: "{{ twingate_rafaelktistakis_spry_unicorn_refresh_token }}" }
    - { role: ddns_provider_ip_update, active: 1, domain_name:  "{{ cloudflare_ddns_domain_name }}", domain_type: '"A"', zone_id: "{{ cloudflare_ddns_zone_id }}", record_id: "{{ cloudflare_ddns_record_id }}", auth_email: "{{ cloudflare_ddns_auth_email }}", bearer_token: "{{ cloudflare_ddns_bearer_token }}" }
    - plex
    - wifipowermanagement
    - { role: qbittorrent, service_started: true, set_settings: false }
    - code_tunnel 
    # to remove the fstab role as disk has been disconnected
    # - fstab_umask_fix
    #- os_hardening
    #- ssh_hardening
  vars_files:
    - config.yml
    - vault.yml
  vars:
    - ansible_become_pass: '{{ su_password }}'

- name: Setting up Pi Zero 2 / Ocarina - Fi
  tags: [all, pi_zero]
  hosts:
    - ocarina
    - fi
  become: yes
  collections:
    - rafaelktistakis.pi
    - rafaelktistakis.dietpi
    - rafaelktistakis.linux
    - devsec.hardening
  roles:
    - dietpisetup
  vars_files:
    - config.yml
    - vault.yml
  vars:
    - ansible_become_pass: '{{ su_password }}'

- name: Setting up Pi Zero 2 / Fi
  tags: [all, fi]
  hosts: 
    - fi
  become: yes
  collections:
    - rafaelktistakis.pi
    - rafaelktistakis.dietpi
    - rafaelktistakis.linux
    - devsec.hardening
  roles:
    - docker
    - { role: twingate_connector, connector: twingate-brilliant-ocelot, network: rafaelktistakis, access_token: "{{ twingate_rafaelktistakis_brilliant_ocelot_access_token }}", refresh_token: "{{ twingate_rafaelktistakis_brilliant_ocelot_refresh_token }}" }
    - { role: ddns_provider_ip_update, active: 1, domain_name:  "{{ cloudflare_ddns_domain_name }}", domain_type: '"A"', zone_id: "{{ cloudflare_ddns_zone_id }}", record_id: "{{ cloudflare_ddns_record_id }}", auth_email: "{{ cloudflare_ddns_auth_email }}", bearer_token: "{{ cloudflare_ddns_bearer_token }}" }
    - mosquitto
  vars_files:
    - config.yml
    - vault.yml
  vars:
    - ansible_become_pass: '{{ su_password }}'

- name: Setting up iMac / Macbook
  tags: [all, macintosh]
  hosts:
    - imac
    #- macbook 
  become: yes
  collections:
    - rafaelktistakis.linux
    - devsec.hardening
  roles:
    - general_setup
    - { role: packages }
    - { role: microsoft_vscode }
    - starship
    - { role: tmux, install_rpi_scripts: false }
    - docker
    #- os_hardening
    #- ssh_hardening
  vars_files:
    - config.yml
    - vault.yml
  vars:
    - ansible_become_pass: '{{ su_password }}'

- name: Setting up Macbook
  tags: [all, macbook]
  hosts: macbook
  become: yes
  collections:
    - rafaelktistakis.linux
    - devsec.hardening
  roles:
    - { role: twingate_connector, connector: twingate-delicate-jackdaw, network: rafaelktistakis, access_token: "{{ twingate_rafaelktistakis_delicate_jackdaw_access_token }}", refresh_token: "{{ twingate_rafaelktistakis_delicate_jackdaw_refresh_token }}" }
    - { role: qbittorrent, service_started: false, set_settings: false }
    #- os_hardening
    #- ssh_hardening
  vars_files:
    - config.yml
    - vault.yml
  vars:
    - ansible_become_pass: '{{ su_password }}'

- name: Setting up iMac
  tags: [all, imac]
  hosts: imac
  become: yes
  collections:
    - rafaelktistakis.linux
    - devsec.hardening
  roles:
    - { role: twingate_connector, connector: twingate-mutant-gaur, network: rafaelktistakis, access_token: "{{ twingate_rafaelktistakis_mutant_gaur_access_token }}", refresh_token: "{{ twingate_rafaelktistakis_mutant_gaur_refresh_token }}" }
    - { role: ddns_provider_ip_update, active: 1, domain_name:  "{{ cloudflare_ddns_domain_name }}", domain_type: '"A"', zone_id: "{{ cloudflare_ddns_zone_id }}", record_id: "{{ cloudflare_ddns_record_id }}", auth_email: "{{ cloudflare_ddns_auth_email }}", bearer_token: "{{ cloudflare_ddns_bearer_token }}" }
    - plex
    - { role: qbittorrent, service_started: true, set_settings: false }
    - code_tunnel
    - { role: flatpak, install_kde_backend: true }
    #- os_hardening
    #- ssh_hardening
  vars_files:
    - config.yml
    - vault.yml
  vars:
    - ansible_become_pass: '{{ su_password }}'
